# Nome do nosso fluxo de trabalho (automa√ß√£o)
name: Atualizar Newsletter Semanal

# Gatilhos: O que faz a automa√ß√£o rodar?
on:
  # 1. Permite rodar manualmente pela aba "Actions" do GitHub
  workflow_dispatch:
  
  # 2. Agenda a execu√ß√£o para toda segunda-feira √†s 8h da manh√£ (hor√°rio UTC)
  schedule:
    - cron: '0 8 * * 1'

# Tarefas: O que o rob√¥ deve fazer?
jobs:
  build-and-deploy:
    # O tipo de m√°quina virtual que o rob√¥ vai usar
    runs-on: ubuntu-latest

    # Os passos que ele vai executar em sequ√™ncia
    steps:
      # Passo 1: Baixa o c√≥digo do seu reposit√≥rio para a m√°quina virtual
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      # Passo 2: Configura o ambiente Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Usaremos Python 3.10

      # Passo 3: Instala as ferramentas (bibliotecas) listadas no requirements.txt
      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Passo 4: Executa o seu script Python para gerar o novo newsletter.html
      - name: Gerar novo arquivo da Newsletter
        run: python update_newsletter.py

      # Passo 5: Faz o "commit" - salva o novo arquivo newsletter.html no reposit√≥rio
      - name: Commit das altera√ß√µes
        run: |
          git config --global user.name 'Newsletter Bot'
          git config --global user.email 'bot@github.com'
          git add newsletter.html
          # A linha abaixo s√≥ faz o commit se houver alguma mudan√ßa no arquivo
          git diff --quiet && git diff --staged --quiet || git commit -m "üì∞ Atualiza newsletter da semana"
          
      # Passo 6: Faz o "push" - envia as altera√ß√µes para o GitHub, publicando o novo site
      - name: Push das altera√ß√µes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
